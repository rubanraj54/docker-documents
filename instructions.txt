Started following this tutorial for docker beginners.

https://prakhar.me/docker-curriculum/#prerequisites

To check docker installed properly, use the following command.
docker run hello-world

Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
78445dd45222: Pull complete
Digest: bla bla bla
Status: Downloaded newer image for hello-world:latest
 
Hello from Docker!
This message shows that your installation appears to be working correctly.
 
To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.

 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

After running the command, i got the above output.

Installing images.
For example, i am installing busybox image.
sudo docker pull busybox

The pull keyword, fetch the busybox image from the docker hub and install it in our machine.

To see list of available images in the machine,
docker images

To run a docker image, use docker run 'image_name'
e.g, docker run busybox

In this case, docker creates a new container and loads the busybox image into it.
Here, we didn't provide any command for busybox, so it booted the container and killed without executing any command.

example with command, docker run busybox echo 'hello i am from busybox'

In this case, docker loads the busybox and execute the echo command from inside the container and exiteds.

To see all the running docker containers, use "docker ps" command

To kill a running docker container, use "docker kill '_first_few_characters_of_container_id'"

To see all the running and exited container, use "docker ps -a"

To run more commands inside the container,
use "docker run -it busybox sh"

this command create container and load busybox in it and give a shell access to the container.

then for example,
run ls command to list of contents
run ps command to list the currently running process
run uptime which givess the current time and how much time the system is up and running

Every time we run the container, it will create and load new files,
to check this, run "rm -rf bin" which deletes the bin folder in the container and try ls command or uptime command. it wont work.
Now "exit" from container and run it again.
Now do "ls", we get everything back now.

Even after exiting the container, docker ps -a show the list of containers which consumes some memory space.
As a thumb rule, delete the containers after using it. docker rm "container1 container2....."

If you want to remove a docker after exiting from it, use --rm flag while running any container.
e.g. docker run --rm -it busybox sh
this --rm flag removes the container after we exit from it.

If you want to remove an image, run this command.
docker rmi "image name"
e.g docker rmi busybox

After removing this image, if you try to run this image, docker will pull the latest image from the hub and install it and run the images.
